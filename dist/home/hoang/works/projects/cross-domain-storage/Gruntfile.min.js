module.exports=function(b){require("load-grunt-tasks")(b);require("time-grunt")(b);var c={app:"app",dist:"dist"};b.initConfig({config:c,watch:{bower:{files:["bower.json"],tasks:["bowerInstall"]},js:{files:["<%= config.app %>/scripts/{,*/}*.js","test/**/*.js"],tasks:["jshint","karma:unit"],options:{livereload:!0}},jstest:{files:["test/spec/{,*/}*.js"],tasks:["test:watch"]},gruntfile:{files:["Gruntfile.js"]},sass:{files:["<%= config.app %>/styles/{,*/}*.{scss,sass}"],tasks:["sass:server","autoprefixer"]},
styles:{files:["<%= config.app %>/styles/{,*/}*.css"],tasks:["newer:copy:styles","autoprefixer"]},livereload:{options:{livereload:"<%= connect.options.livereload %>"},files:["<%= config.app %>/{,*/}*.html",".tmp/styles/{,*/}*.css","<%= config.app %>/images/{,*/}*"]}},connect:{options:{port:9E3,open:!0,livereload:35729,hostname:"localhost"},livereload:{options:{middleware:function(a){return[a["static"](".tmp"),a().use("/bower_components",a["static"]("./bower_components")),a["static"](c.app)]}}},test:{options:{open:!1,
port:9001,middleware:function(a){return[a["static"](".tmp"),a["static"]("test"),a().use("/bower_components",a["static"]("./bower_components")),a["static"](c.app)]}}},dist:{options:{base:"<%= config.dist %>",livereload:!1}}},clean:{dist:{files:[{dot:!0,src:[".tmp","<%= config.dist %>/*","!<%= config.dist %>/.git*"]}]},server:".tmp"},jshint:{options:{jshintrc:".jshintrc",reporter:require("jshint-stylish")},all:["Gruntfile.js","<%= config.app %>/scripts/{,*/}*.js","!<%= config.app %>/scripts/vendor/*",
"test/spec/{,*/}*.js"]},karma:{unit:{configFile:"karma.conf.js"}},release:{options:{file:"bower.json",npm:!1}},sass:{options:{loadPath:["bower_components"]},dist:{files:[{expand:!0,cwd:"<%= config.app %>/styles",src:["*.scss"],dest:".tmp/styles",ext:".css"}]},server:{files:[{expand:!0,cwd:"<%= config.app %>/styles",src:["*.scss"],dest:".tmp/styles",ext:".css"}]}},autoprefixer:{options:{browsers:["last 1 version"]},dist:{files:[{expand:!0,cwd:".tmp/styles/",src:"{,*/}*.css",dest:".tmp/styles/"}]}},
bowerInstall:{app:{src:["<%= config.app %>/index.html"],exclude:["bower_components/bootstrap-sass-official/vendor/assets/javascripts/bootstrap.js"]},sass:{src:["<%= config.app %>/styles/{,*/}*.{scss,sass}"]}},rev:{dist:{files:{src:["<%= config.dist %>/scripts/{,*/}*.js","<%= config.dist %>/styles/{,*/}*.css","<%= config.dist %>/images/{,*/}*.*","<%= config.dist %>/styles/fonts/{,*/}*.*","<%= config.dist %>/*.{ico,png}"]}}},useminPrepare:{options:{dest:"<%= config.dist %>"},html:"<%= config.app %>/index.html"},
usemin:{options:{assetsDirs:["<%= config.dist %>","<%= config.dist %>/images"]},html:["<%= config.dist %>/{,*/}*.html"],css:["<%= config.dist %>/styles/{,*/}*.css"]},imagemin:{dist:{files:[{expand:!0,cwd:"<%= config.app %>/images",src:"{,*/}*.{gif,jpeg,jpg,png}",dest:"<%= config.dist %>/images"}]}},svgmin:{dist:{files:[{expand:!0,cwd:"<%= config.app %>/images",src:"{,*/}*.svg",dest:"<%= config.dist %>/images"}]}},htmlmin:{dist:{options:{collapseBooleanAttributes:!0,collapseWhitespace:!0,removeAttributeQuotes:!0,
removeCommentsFromCDATA:!0,removeEmptyAttributes:!0,removeOptionalTags:!0,removeRedundantAttributes:!0,useShortDoctype:!0},files:[{expand:!0,cwd:"<%= config.dist %>",src:"{,*/}*.html",dest:"<%= config.dist %>"}]}},copy:{dist:{files:[{expand:!0,dot:!0,cwd:"<%= config.app %>",dest:"<%= config.dist %>",src:["*.{ico,png,txt}",".htaccess","images/{,*/}*.webp","{,*/}*.html","styles/fonts/{,*/}*.*"]}]},styles:{expand:!0,dot:!0,cwd:"<%= config.app %>/styles",dest:".tmp/styles/",src:"{,*/}*.css"}},modernizr:{dist:{devFile:"bower_components/modernizr/modernizr.js",
outputFile:"<%= config.dist %>/scripts/vendor/modernizr.js",files:{src:["<%= config.dist %>/scripts/{,*/}*.js","<%= config.dist %>/styles/{,*/}*.css","!<%= config.dist %>/scripts/vendor/*"]},uglify:!0}},concurrent:{server:["sass:server","copy:styles"],test:["copy:styles"],dist:["sass","copy:styles","imagemin","svgmin"]}});b.registerTask("serve",function(a){if("dist"===a)return b.task.run(["build","connect:dist:keepalive"]);b.task.run("clean:server concurrent:server autoprefixer connect:livereload karma:unit watch".split(" "))});
b.registerTask("server",function(a){b.log.warn("The `server` task has been deprecated. Use `grunt serve` to start a server.");b.task.run([a?"serve:"+a:"serve"])});b.registerTask("test",function(a){"watch"!==a&&b.task.run(["clean:server","concurrent:test","autoprefixer"]);b.task.run(["connect:test","mocha"])});b.registerTask("build","clean:dist useminPrepare concurrent:dist autoprefixer concat cssmin uglify copy:dist usemin htmlmin karma:unit".split(" "));b.registerTask("default",["newer:jshint","test",
"build"])};
